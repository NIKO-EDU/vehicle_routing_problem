# Vehicle Routing Problem (VRP) - Group 9 ACIT 

## Overview
This project solves the Capacitated Vehicle Routing Problem (CVRP) using a Genetic Algorithm (GA). It includes tools to create problem instances, check solutions, and save results.

## Setup

### 1. Create a Virtual Environment
Run these commands to set up a virtual environment:

#### Linux/macOS:
```bash
python3 -m venv .VIRTUAL_ENV
source .VIRTUAL_ENV/bin/activate
```

#### Windows:
```bash
python -m venv .VIRTUAL_ENV
.\.VIRTUAL_ENV\Scripts\activate
```

### 2. Install Dependencies
Install the required Python packages:
```bash
pip install -r requirements.txt
```

## How to Use

### Commands

#### 1. Reset Environment
Deletes all created data:
```bash
python main.py -reset
```

#### 2. Generate Problem Sets
Creates scenario files in the `data/` folder:
```bash
python main.py -generate
```

#### 3. Check Status
Shows the current state of the environment:
```bash
python main.py
```

#### 4. Initialize Population
Creates an initial population for all scenarios:
```bash
python main.py -init -pop <size>
```
Replace `<size>` with the number of individuals you want.

#### 5. Run Genetic Algorithm
Runs the GA for a specific scenario:
```bash
python main.py -run -s <scenario-name>
```
Replace `<scenario-name>` with the name of the scenario.

#### 6. Visualize Results
Shows the results of a scenario:
```bash
python main.py -viz -s <scenario-name> -speed <speed>
```
Replace `<scenario-name>` with the scenario name and `<speed>` with the animation speed.

## Example Workflow

1. **Generate Problem Sets:**
   ```bash
   python main.py -generate
   ```

2. **Initialize Population:**
   ```bash
   python main.py -init -pop 100
   ```

3. **Run GA:**
   ```bash
   python main.py -run -s s-1
   ```

4. **Visualize Results:**
   ```bash
   python main.py -viz -s s-1 -speed 200
   ```